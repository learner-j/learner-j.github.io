<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜鸟程序媛的进阶之路</title>
  
  <subtitle>纵有千古，横有八荒；前途似海，来日方长。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-01-28T14:25:02.350Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>learner-j</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python学习笔记</title>
    <link href="http://yoursite.com/2020/07/03/post/"/>
    <id>http://yoursite.com/2020/07/03/post/</id>
    <published>2020-07-03T04:21:59.000Z</published>
    <updated>2021-01-28T14:25:02.350Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章Python入门导学"><a href="#第一章Python入门导学" class="headerlink" title="第一章Python入门导学"></a>第一章Python入门导学</h1><p>使用python的国内公司：豆瓣，知乎</p><p>将学习以下内容：基本语法   常见误区   pythonic   总结经验</p><h2 id="python特点"><a href="#python特点" class="headerlink" title="python特点"></a>python特点</h2><h3 id="简洁"><a href="#简洁" class="headerlink" title="简洁"></a>简洁</h3><p>如何交换两个变量：</p><p>其他很多语言</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp=x</span><br><span class="line">x=y</span><br><span class="line">y=temp</span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x,y=y,x</span><br></pre></td></tr></table></figure><h3 id="非常易于学习"><a href="#非常易于学习" class="headerlink" title="非常易于学习"></a>非常易于学习</h3><p>相对于其他语言更简单</p><h2 id="python能做哪些（几乎万能）"><a href="#python能做哪些（几乎万能）" class="headerlink" title="python能做哪些（几乎万能）"></a>python能做哪些（几乎万能）</h2><ul><li>爬虫：知名应用</li><li>自动化运维与自动化测试</li><li>大数据与数据分析spark</li><li>Web开发：Flask、Django</li><li>机器学习：Tensor Flow</li><li>胶水语言：混合其他如C++、Java等来编程。能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起</li></ul><h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><p>跨平台：Windows  MacOs  Linux</p><p>python是面向对象的语言</p><p>python缺点：慢  （相对于c、c++、java运行效率慢）</p><p>经典误区:不要把思维局限在Web，不要只写Web。</p><h1 id="第二章python环境安装"><a href="#第二章python环境安装" class="headerlink" title="第二章python环境安装"></a>第二章python环境安装</h1><h1 id="第三章python的基本数据类型"><a href="#第三章python的基本数据类型" class="headerlink" title="第三章python的基本数据类型"></a>第三章python的基本数据类型</h1><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><h3 id="整数-int"><a href="#整数-int" class="headerlink" title="整数 int"></a>整数 int</h3><h3 id="浮点数-float-只有这一种，没有double"><a href="#浮点数-float-只有这一种，没有double" class="headerlink" title="浮点数 float(只有这一种，没有double)"></a>浮点数 float(只有这一种，没有double)</h3><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><h4 id="type-2-2-gt-float-保留小数"><a href="#type-2-2-gt-float-保留小数" class="headerlink" title="type(2/2)   -&gt; float  保留小数"></a>type(2/2)   -&gt; float  保留小数</h4><h4 id="type-2-2-gt-int-整除，只保留整数部分"><a href="#type-2-2-gt-int-整除，只保留整数部分" class="headerlink" title="type(2//2) -&gt;int   整除，只保留整数部分"></a>type(2//2) -&gt;int   整除，只保留整数部分</h4><h3 id="布尔类型-bool-表示真假"><a href="#布尔类型-bool-表示真假" class="headerlink" title="布尔类型 bool :表示真假"></a>布尔类型 bool :表示真假</h3><h4 id="True-：int型1和bool型True可相互转换；同时非零数字-包括float类型均可表示True"><a href="#True-：int型1和bool型True可相互转换；同时非零数字-包括float类型均可表示True" class="headerlink" title="True ：int型1和bool型True可相互转换；同时非零数字    包括float类型均可表示True"></a>True ：int型1和bool型True可相互转换；同时非零数字    包括float类型均可表示True</h4><h4 id="False：int型0和bool型False可相互转换"><a href="#False：int型0和bool型False可相互转换" class="headerlink" title="False：int型0和bool型False可相互转换"></a>False：int型0和bool型False可相互转换</h4><h4 id="字符串也可转换成bool类型，例如bool-‘abc’-输出为True-bool-‘-‘-输出为False"><a href="#字符串也可转换成bool类型，例如bool-‘abc’-输出为True-bool-‘-‘-输出为False" class="headerlink" title="字符串也可转换成bool类型，例如bool(‘abc’)输出为True,bool(‘ ‘)输出为False"></a>字符串也可转换成bool类型，例如bool(‘abc’)输出为True,bool(‘ ‘)输出为False</h4><h4 id="列表类型-数组类型-与字符串类型‘’同理"><a href="#列表类型-数组类型-与字符串类型‘’同理" class="headerlink" title="列表类型[],数组类型{}与字符串类型‘’同理"></a>列表类型[],数组类型{}与字符串类型‘’同理</h4><h4 id="bool-None-也是False"><a href="#bool-None-也是False" class="headerlink" title="bool(None)也是False"></a>bool(None)也是False</h4><h4 id="注意首字母大写，如果小写语法报错"><a href="#注意首字母大写，如果小写语法报错" class="headerlink" title="注意首字母大写，如果小写语法报错"></a>注意首字母大写，如果小写语法报错</h4><h3 id="复数complex"><a href="#复数complex" class="headerlink" title="复数complex"></a>复数complex</h3><h4 id="例如36j"><a href="#例如36j" class="headerlink" title="例如36j"></a>例如36j</h4><h2 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h2><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h3><h4 id="二进制数前加0b-例如0b10表示二进制10"><a href="#二进制数前加0b-例如0b10表示二进制10" class="headerlink" title="二进制数前加0b  例如0b10表示二进制10"></a>二进制数前加0b  例如0b10表示二进制10</h4><h4 id="输入二进制0b10无需转换，按回车键即会输出相应的十进制数2"><a href="#输入二进制0b10无需转换，按回车键即会输出相应的十进制数2" class="headerlink" title="输入二进制0b10无需转换，按回车键即会输出相应的十进制数2"></a>输入二进制0b10无需转换，按回车键即会输出相应的十进制数2</h4><h3 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h3><h4 id="八进制数前加0o-例如0o10表示八进制数10"><a href="#八进制数前加0o-例如0o10表示八进制数10" class="headerlink" title="八进制数前加0o 例如0o10表示八进制数10"></a>八进制数前加0o 例如0o10表示八进制数10</h4><h4 id="输入八进制数0o10无需转换，按回车键会输出相应的十进制数8"><a href="#输入八进制数0o10无需转换，按回车键会输出相应的十进制数8" class="headerlink" title="输入八进制数0o10无需转换，按回车键会输出相应的十进制数8"></a>输入八进制数0o10无需转换，按回车键会输出相应的十进制数8</h4><h3 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h3><h4 id="十六进制数前加0x，其他同理"><a href="#十六进制数前加0x，其他同理" class="headerlink" title="十六进制数前加0x，其他同理"></a>十六进制数前加0x，其他同理</h4><h3 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a>十进制</h3><h4 id="十进制数前不加任何前缀，和平时一样"><a href="#十进制数前不加任何前缀，和平时一样" class="headerlink" title="十进制数前不加任何前缀，和平时一样"></a>十进制数前不加任何前缀，和平时一样</h4><h3 id="其他进制转化为二进制"><a href="#其他进制转化为二进制" class="headerlink" title="其他进制转化为二进制"></a>其他进制转化为二进制</h3><h4 id="需用到方法bin-例如将十进制数10转化为二进制-gt-gt-gt-bin-10-其他进制转化为二进制同理"><a href="#需用到方法bin-例如将十进制数10转化为二进制-gt-gt-gt-bin-10-其他进制转化为二进制同理" class="headerlink" title="需用到方法bin()    例如将十进制数10转化为二进制      &gt;&gt;&gt; bin(10) ,其他进制转化为二进制同理"></a>需用到方法bin()    例如将十进制数10转化为二进制      &gt;&gt;&gt; bin(10) ,其他进制转化为二进制同理</h4><h3 id="其他进制转化为十进制"><a href="#其他进制转化为十进制" class="headerlink" title="其他进制转化为十进制"></a>其他进制转化为十进制</h3><h4 id="需用到方法int-例如将二进制数0b11转化为十进制-gt-gt-gt-int-0b11-其他进制转化为10进制同理"><a href="#需用到方法int-例如将二进制数0b11转化为十进制-gt-gt-gt-int-0b11-其他进制转化为10进制同理" class="headerlink" title="需用到方法int() 例如将二进制数0b11转化为十进制 &gt;&gt;&gt;int(0b11),其他进制转化为10进制同理"></a>需用到方法int() 例如将二进制数0b11转化为十进制 &gt;&gt;&gt;int(0b11),其他进制转化为10进制同理</h4><h3 id="其他进制转化为十六进制"><a href="#其他进制转化为十六进制" class="headerlink" title="其他进制转化为十六进制"></a>其他进制转化为十六进制</h3><h4 id="需用到方法hex-，其他同理"><a href="#需用到方法hex-，其他同理" class="headerlink" title="需用到方法hex()，其他同理"></a>需用到方法hex()，其他同理</h4><h3 id="其他进制转换为八进制"><a href="#其他进制转换为八进制" class="headerlink" title="其他进制转换为八进制"></a>其他进制转换为八进制</h3><h4 id="需用到方法oct-，其他同理"><a href="#需用到方法oct-，其他同理" class="headerlink" title="需用到方法oct()，其他同理"></a>需用到方法oct()，其他同理</h4><h2 id="字符串类型str"><a href="#字符串类型str" class="headerlink" title="字符串类型str"></a>字符串类型str</h2><h3 id="单引号-：如果字符串内部有双引号，则外面需单引号"><a href="#单引号-：如果字符串内部有双引号，则外面需单引号" class="headerlink" title="单引号 ：如果字符串内部有双引号，则外面需单引号"></a>单引号 ：如果字符串内部有双引号，则外面需单引号</h3><h3 id="双引号：如果字符串内部有单引号，则外面需双引号。"><a href="#双引号：如果字符串内部有单引号，则外面需双引号。" class="headerlink" title="双引号：如果字符串内部有单引号，则外面需双引号。"></a>双引号：如果字符串内部有单引号，则外面需双引号。</h3><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="let’s-go"><a href="#let’s-go" class="headerlink" title="let’s go"></a>let’s go</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"let's go"</span>    <span class="comment">#true</span></span><br><span class="line"><span class="string">'let\'s go'</span>   <span class="comment">#true</span></span><br><span class="line"><span class="string">'let'</span>s go<span class="string">'    #false</span></span><br></pre></td></tr></table></figure><h3 id="三引号：三个双引号或者三个单引号"><a href="#三引号：三个双引号或者三个单引号" class="headerlink" title="三引号：三个双引号或者三个单引号"></a>三引号：三个双引号或者三个单引号</h3><p>Python建议每行的宽度最大是79，超过79字符要对字符串进行换行。</p><ol><li><p>如果用“双引号xxxxx  换行……会报错，故使用’’’三引号…换行…输入完’’’。但输出字符串内部换行部分会显示 \n。如果想用单引号或者双引号换行，可以采用以下形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'hello\      #输入</span></span><br><span class="line"><span class="string">world'</span>       <span class="comment">#输入</span></span><br><span class="line"><span class="string">'helloworld'</span> <span class="comment">#输出</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>如果三种形式表示的字符串内部有\n,输出不会有换行，还是显示\n。</p></li><li><p>如果用print()输出三引号、双引号、单引号表示的字符串，则不会显示\n，而是以换行方式显示。</p></li></ol><h3 id="转义字符print"><a href="#转义字符print" class="headerlink" title="转义字符print"></a>转义字符print</h3><p>特殊的字符：无法“看见”的字符+与语言本身语法有冲突的字符（如单引号）</p><p>注意：以下不是同一个概念</p><p>\n 换行：换到当前位置的下一行，而不会回到行首</p><p>\r  回车：回到当前行的行首，而不会换到下一行，如果接着输出的话，本行以前的内容会被逐一覆盖</p><p>如果要输出文件路径，可采用以下两种方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'c:\\northwind\\northwest'</span>)</span><br><span class="line">print(<span class="string">r'c:\northwind\northwest'</span>)<span class="comment">#当一个字符串前加上r或R后，该字符串就不是一个普通字符串，而是一个原始字符串：所见即所得</span></span><br><span class="line">print(<span class="string">r'let'</span>s go<span class="string">') #报错，外部单引号没有成对出现</span></span><br></pre></td></tr></table></figure><h3 id="字符串基本操作方法"><a href="#字符串基本操作方法" class="headerlink" title="字符串基本操作方法"></a>字符串基本操作方法</h3><h4 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hello"</span>+<span class="string">"world"</span><span class="comment">#输出为'helloworld'</span></span><br><span class="line"><span class="string">"hello"</span>*<span class="number">3</span><span class="comment">#输出为'hellohellohello'</span></span><br><span class="line"><span class="string">"hello"</span>*<span class="string">"world"</span><span class="comment">#报错</span></span><br></pre></td></tr></table></figure><h4 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hello world"</span>[<span class="number">0</span>]<span class="comment">#输出为'h'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">4</span>]<span class="comment">#输出为'o'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">-1</span>]<span class="comment">#输出为'd'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">-3</span>]<span class="comment">#输出为'r'</span></span><br></pre></td></tr></table></figure><p>例子：如果想获取’w’有以下两种方式： </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hello world"</span>[<span class="number">6</span>]</span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">-5</span>]</span><br></pre></td></tr></table></figure><p>例子：想获取一组字符，如”hello”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hello world"</span>[<span class="number">0</span>:<span class="number">5</span>]<span class="comment">#注意5为输出字符串末位标号的下一位,输出"hello"</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">0</span>:<span class="number">-1</span>]<span class="comment">#输出'hello worl'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">0</span>:<span class="number">-3</span>]<span class="comment">#输出'hello wo'</span></span><br><span class="line"><span class="string">"hello world"</span>[:<span class="number">-5</span>]<span class="comment">#输出'hello',默认从开头到标号处</span></span><br></pre></td></tr></table></figure><p>例子：获取”world”:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hello world"</span>[<span class="number">6</span>:<span class="number">11</span>]<span class="comment">#输出'world'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">6</span>:<span class="number">20</span>]<span class="comment">#输出'world'</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">6</span>:]<span class="comment">#输出'world'，默认从标号到末尾</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">-5</span>:]<span class="comment">#输出'world'，默认从标号到末尾</span></span><br></pre></td></tr></table></figure><h1 id="第四章python中表示“组”的概念和定义"><a href="#第四章python中表示“组”的概念和定义" class="headerlink" title="第四章python中表示“组”的概念和定义"></a>第四章python中表示“组”的概念和定义</h1><h2 id="列表list"><a href="#列表list" class="headerlink" title="列表list"></a>列表list</h2><h3 id="一些例子：-可加入任意类型"><a href="#一些例子：-可加入任意类型" class="headerlink" title="一些例子：(可加入任意类型)"></a>一些例子：(可加入任意类型)</h3><p>[1,2,3,4,5,6]</p><p>[“hello”,”world”,1,9,True,False]</p><p>[[1,2],[3,4],[True,False]]  -&gt;叫嵌套列表</p><h3 id="列表基本操作方法"><a href="#列表基本操作方法" class="headerlink" title="列表基本操作方法"></a>列表基本操作方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"新月打击"</span>,<span class="string">"苍白之瀑"</span>,<span class="string">"月之降临"</span>,<span class="string">"月神冲刺"</span>][<span class="number">0</span>]<span class="comment">#输出'新月打击'</span></span><br><span class="line">[<span class="string">"新月打击"</span>,<span class="string">"苍白之瀑"</span>,<span class="string">"月之降临"</span>,<span class="string">"月神冲刺"</span>][<span class="number">3</span>]<span class="comment">#输出'月神冲刺'</span></span><br><span class="line">[<span class="string">"新月打击"</span>,<span class="string">"苍白之瀑"</span>,<span class="string">"月之降临"</span>,<span class="string">"月神冲刺"</span>][<span class="number">-1</span>]<span class="comment">#输出'月神冲刺'</span></span><br><span class="line">[<span class="string">"新月打击"</span>,<span class="string">"苍白之瀑"</span>,<span class="string">"月之降临"</span>,<span class="string">"月神冲刺"</span>][<span class="number">0</span>:<span class="number">2</span>]<span class="comment">#输出['新月打击','苍白之瀑']仍是列表</span></span><br><span class="line">[<span class="string">'新月打击'</span>，<span class="string">'苍白之瀑'</span>,<span class="string">'月之降临'</span>,<span class="string">'月神冲刺'</span>]+[<span class="string">'点燃'</span>,<span class="string">'虚弱'</span>]<span class="comment">#输出['新月打击'，'苍白之瀑','月之降临','月神冲刺','点燃','虚弱']；将+变成*会报错</span></span><br><span class="line">[<span class="string">'点燃'</span>,<span class="string">'虚弱'</span>]*<span class="number">3</span><span class="comment">#输出['点燃','虚弱','点燃','虚弱','点燃','虚弱']</span></span><br><span class="line">[<span class="string">'点燃'</span>,<span class="string">'虚弱'</span>]-[<span class="string">'点燃'</span>]<span class="comment">#报错</span></span><br></pre></td></tr></table></figure><h2 id="元组tuple"><a href="#元组tuple" class="headerlink" title="元组tuple"></a>元组tuple</h2><h3 id="一些例子"><a href="#一些例子" class="headerlink" title="一些例子"></a>一些例子</h3><p>(1,2,3,4,5)</p><p>(1,’-1’,True)</p><h3 id="元组基本操作方法"><a href="#元组基本操作方法" class="headerlink" title="元组基本操作方法"></a>元组基本操作方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)[<span class="number">0</span>]<span class="comment">#输出1</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)[<span class="number">0</span>:<span class="number">2</span>]<span class="comment">#输出(1,2)</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)+(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)<span class="comment">#输出(1,2,3,4,5,6)</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)*<span class="number">3</span><span class="comment">#输出(1,2,3,1,2,3,1,2,3)</span></span><br></pre></td></tr></table></figure><h3 id="元组和列表的区别"><a href="#元组和列表的区别" class="headerlink" title="元组和列表的区别"></a>元组和列表的区别</h3><p>列表是动态数组，元组是静态数组</p><h3 id="注意（只有一个元素的元组）"><a href="#注意（只有一个元素的元组）" class="headerlink" title="注意（只有一个元素的元组）"></a>注意（只有一个元素的元组）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type((<span class="number">1</span>))<span class="comment">#int</span></span><br><span class="line">type((<span class="string">'hello'</span>))<span class="comment">#str</span></span><br></pre></td></tr></table></figure><p>()不仅可以表示元组，也是数学基本运算的符号（例如：（1+1）*2），所以说有歧义，IDLE不知道你是何种意思。故python规定为数学运算符号的意思。</p><h3 id="表示只有一个元素的元组："><a href="#表示只有一个元素的元组：" class="headerlink" title="表示只有一个元素的元组："></a>表示只有一个元素的元组：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>,)<span class="comment">#末尾加逗号</span></span><br><span class="line">type((<span class="number">1</span>,))<span class="comment">#tuple</span></span><br></pre></td></tr></table></figure><h3 id="表示空元组："><a href="#表示空元组：" class="headerlink" title="表示空元组："></a>表示空元组：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">()<span class="comment">#空元组</span></span><br><span class="line">type(())<span class="comment">#tuple</span></span><br><span class="line">type([<span class="number">1</span>])<span class="comment">#list</span></span><br></pre></td></tr></table></figure><h2 id="归纳总结"><a href="#归纳总结" class="headerlink" title="归纳总结"></a>归纳总结</h2><p><strong><em>序列</em></strong>：str   list   tuple</p><p><strong>* 共有操作：*</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>][<span class="number">2</span>]<span class="comment">#3</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>][<span class="number">0</span>:<span class="number">3</span>]<span class="comment">#[1,2,3],此操作叫切片</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>][<span class="number">-1</span>:]<span class="comment">#[5]</span></span><br><span class="line"><span class="string">"hello world"</span>[<span class="number">0</span>:<span class="number">8</span>:<span class="number">2</span>]<span class="comment">#'hlow'#最后一个数字为步长</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]<span class="comment">#True</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]<span class="comment">#False</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">not</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]<span class="comment">#False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">len([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])<span class="comment">#6</span></span><br><span class="line">len(<span class="string">"hello world"</span>)<span class="comment">#11</span></span><br><span class="line">max([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])<span class="comment">#6</span></span><br><span class="line">min([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])<span class="comment">#1</span></span><br><span class="line">max(<span class="string">'hello world'</span>)<span class="comment">#'w'  按ASCII码大小排序</span></span><br><span class="line">min(<span class="string">'hello world'</span>)<span class="comment">#' '</span></span><br><span class="line">min(<span class="string">'helloworld'</span>)<span class="comment">#'d'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ord(<span class="string">'w'</span>)<span class="comment">#119  该函数的功能是得到ASCII码</span></span><br><span class="line">ord(<span class="string">'d'</span>)<span class="comment">#100</span></span><br><span class="line">ord(<span class="string">' '</span>)<span class="comment">#32</span></span><br></pre></td></tr></table></figure><h2 id="集合set"><a href="#集合set" class="headerlink" title="集合set"></a>集合set</h2><h3 id="最大特点：无序"><a href="#最大特点：无序" class="headerlink" title="最大特点：无序"></a>最大特点：无序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type(&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;)<span class="comment">#set</span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;[<span class="number">0</span>]<span class="comment">#报错，原因是集合无序，没有索引</span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;[<span class="number">0</span>:<span class="number">2</span>]<span class="comment">#报错，同理无序不支持该操作</span></span><br></pre></td></tr></table></figure><h3 id="其它特性：不重复"><a href="#其它特性：不重复" class="headerlink" title="其它特性：不重复"></a>其它特性：不重复</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>&#125;<span class="comment">#&#123;1,2,3,4&#125;</span></span><br></pre></td></tr></table></figure><h3 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">len(&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;)<span class="comment">#3</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">in</span> &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;<span class="comment">#True</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">not</span> <span class="keyword">in</span> &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;<span class="comment">#False</span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125; - &#123;<span class="number">3</span>,<span class="number">4</span>&#125;<span class="comment">#&#123;1,2,5,6&#125; 求差集</span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125; &amp; &#123;<span class="number">3</span>,<span class="number">4</span>&#125;<span class="comment">#&#123;3,4&#125; 求交集</span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125; | &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>&#125;<span class="comment">#&#123;1,2,3,4,5,6,7&#125; 求并集</span></span><br></pre></td></tr></table></figure><h4 id="定义空集合"><a href="#定义空集合" class="headerlink" title="定义空集合"></a>定义空集合</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type(&#123;&#125;)<span class="comment">#dict</span></span><br><span class="line">type(set())<span class="comment">#set</span></span><br><span class="line">len(set())<span class="comment">#0</span></span><br></pre></td></tr></table></figure><h2 id="字典dict"><a href="#字典dict" class="headerlink" title="字典dict"></a>字典dict</h2><p>Key-Value</p><p>一个字典可以有很多个key和value组成，集合类型（set），不是序列</p><p>定义方式：{key1:value1,key2:value2….}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type(&#123;<span class="number">1</span>:<span class="number">1</span>,<span class="number">2</span>:<span class="number">2</span>,<span class="number">3</span>:<span class="number">3</span>&#125;)//dict</span><br><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'W'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#一个表示例子</span></span><br><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'W'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;[<span class="number">0</span>]<span class="comment">#报错，原因字典不是序列，无序，不能用下标索引</span></span><br></pre></td></tr></table></figure><p>重要操作：通过key访问value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'W'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;[<span class="string">'Q'</span>]<span class="comment">#'新月打击'</span></span><br><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'W'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;[<span class="string">'R'</span>]<span class="comment">#'月神冲刺'</span></span><br><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'Q'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;[<span class="string">'Q'</span>]<span class="comment">#'苍白之瀑'  没有报错</span></span><br><span class="line">&#123;<span class="string">'Q'</span>:<span class="string">'新月打击'</span>，<span class="string">'Q'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#&#123;'Q':'苍白之瀑','E':'月之降临','R':'月神冲刺'&#125;不允许重复，故第一个新月打击被取消</span></span><br><span class="line">&#123;<span class="number">1</span>:<span class="string">'新月打击'</span>，<span class="string">'1'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#&#123;1:'新月打击'，'1':'苍白之瀑','E':'月之降临','R':'月神冲刺'&#125;</span></span><br><span class="line">&#123;<span class="number">1</span>:<span class="string">'新月打击'</span>，<span class="string">'1'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:&#123;<span class="number">1</span>:<span class="number">1</span>&#125;,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#语法正确</span></span><br></pre></td></tr></table></figure><p>value:    str int float list set dict 几乎任意</p><p>   key:     int  str 等不可变类型：注意元组不可变，列表可变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;[<span class="number">1</span>,<span class="number">2</span>]:<span class="string">'新月打击'</span>,<span class="string">'1'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#列表报错</span></span><br><span class="line">&#123;(<span class="number">1</span>,<span class="number">2</span>):<span class="string">'新月打击'</span>,<span class="string">'1'</span>:<span class="string">'苍白之瀑'</span>,<span class="string">'E'</span>:<span class="string">'月之降临'</span>,<span class="string">'R'</span>:<span class="string">'月神冲刺'</span>&#125;<span class="comment">#元组不报错</span></span><br></pre></td></tr></table></figure><p>空的字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(&#123;&#125;)<span class="comment">#dict</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong><img src="/2020/07/03/post/11.png" class title="This is an test image"></strong></p><h1 id="第五章变量与运算符"><a href="#第五章变量与运算符" class="headerlink" title="第五章变量与运算符"></a>第五章变量与运算符</h1><h2 id="什么是变量-名字"><a href="#什么是变量-名字" class="headerlink" title="什么是变量:名字"></a>什么是变量:名字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]<span class="comment">#变量赋值</span></span><br><span class="line">B = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">A*<span class="number">3</span> + B + A<span class="comment">#操作</span></span><br></pre></td></tr></table></figure><p>注意：命名可读性要强</p><h2 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h2><p>变量名由字母、数字、下划线组成；</p><p>首位不能是数字；</p><p>系统关键字（即保留关键字）不能用在变量名；</p><p>type不是系统关键字，命名不出错；但由于歧义不推荐用于变量名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'1'</span><span class="comment">#赋值没有类型限制，动态语言</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">1</span></span><br><span class="line">b=a</span><br><span class="line">a=<span class="number">3</span></span><br><span class="line">print(b)<span class="comment">#1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">b=a</span><br><span class="line">a[<span class="number">0</span>]=<span class="string">'1'</span></span><br><span class="line">print(a)<span class="comment">#['1',2,3,4]</span></span><br><span class="line">print(b)<span class="comment">#['1',2,3,4]</span></span><br></pre></td></tr></table></figure><h2 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type = <span class="number">1</span></span><br><span class="line">type(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#上述相当于1(1),会报错</span></span><br></pre></td></tr></table></figure><p>int str tuple (不可改变）值类型；</p><p> list  set dict（可变）引用类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'hello'</span></span><br><span class="line">a = a+ <span class="string">'python'</span><span class="comment">#str是不可变类型，相加后已不是原来的字符串</span></span><br><span class="line">print(a)<span class="comment">#hellopython</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="string">'hello'</span></span><br><span class="line">id(b)//<span class="number">55399200</span><span class="comment">#显示在内存中的地址</span></span><br><span class="line">b=b+<span class="string">'python'</span></span><br><span class="line">id(b)//<span class="number">55336696</span><span class="comment">#地址改变</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'python'</span>[<span class="number">0</span>]<span class="comment">#'p'</span></span><br><span class="line"><span class="string">'python'</span>[<span class="number">0</span>]=<span class="string">'o'</span><span class="comment">#报错</span></span><br></pre></td></tr></table></figure><h2 id="列表list的可变和元组tuple的不可变"><a href="#列表list的可变和元组tuple的不可变" class="headerlink" title="列表list的可变和元组tuple的不可变"></a>列表list的可变和元组tuple的不可变</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]<span class="comment">#list</span></span><br><span class="line">id(a)<span class="comment">#59570576</span></span><br><span class="line">hex(id(a))<span class="comment">#'0x38cf990'</span></span><br><span class="line">a[<span class="number">0</span>]=<span class="string">'1'</span></span><br><span class="line">id(a)<span class="comment">#59570576地址没变</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)<span class="comment">#tuple</span></span><br><span class="line">a[<span class="number">0</span>]=<span class="string">'1'</span><span class="comment">#报错</span></span><br><span class="line">a.append(<span class="number">4</span>)<span class="comment">#报错</span></span><br><span class="line"><span class="comment">#建议，能用元组就用元组，原因：改变会报错直接提示</span></span><br><span class="line">b=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]<span class="comment">#list</span></span><br><span class="line">b.append(<span class="number">4</span>)</span><br><span class="line">print(b)<span class="comment">#[1,2,3,4]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line">a[<span class="number">3</span>]<span class="comment">#[1,2,4]</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">2</span>]<span class="comment">#4</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">1</span>,<span class="number">2</span>,[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]])</span><br><span class="line">a[<span class="number">3</span>][<span class="number">2</span>][<span class="number">1</span>]<span class="comment">#'b'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line">a[<span class="number">2</span>]=<span class="string">'3'</span><span class="comment">#报错</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">2</span>]=<span class="string">'4'</span></span><br><span class="line">print(a)<span class="comment">#(1,2,3,[1,2,'4'])改变的是列表不是元组</span></span><br></pre></td></tr></table></figure><h2 id="运算符号"><a href="#运算符号" class="headerlink" title="运算符号"></a>运算符号</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'hello'</span>+<span class="string">'world'</span> <span class="comment">#'helloworld'</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]*<span class="number">3</span>  <span class="comment">#[1,2,3,1,2,3,1,2,3]</span></span><br><span class="line"><span class="number">3</span><span class="number">-1</span>  <span class="comment">#2</span></span><br><span class="line"><span class="number">3</span>/<span class="number">2</span>  <span class="comment">#1.5</span></span><br><span class="line"><span class="number">3</span>//<span class="number">2</span> <span class="comment">#1</span></span><br><span class="line"><span class="number">5</span>%<span class="number">2</span>  <span class="comment">#1</span></span><br><span class="line"><span class="number">2</span>**<span class="number">2</span> <span class="comment">#4 (2的2次方)</span></span><br><span class="line"><span class="number">2</span>**<span class="number">5</span> <span class="comment">#32(2的5次方)</span></span><br></pre></td></tr></table></figure><p><strong><img src="/2020/07/03/post/22.png" class title="This is an test image"></strong></p><p>注意:python不存在变量的定义，c=1,即将1赋值给变量c；变量在python中只是个名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=c+<span class="number">1</span></span><br><span class="line">c+=<span class="number">1</span><span class="comment">#以上两种语句等价</span></span><br><span class="line">c++ <span class="comment">#报错,python中没有自增运算符</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="number">1</span></span><br><span class="line">b+=b&gt;=<span class="number">1</span></span><br><span class="line">print(b)<span class="comment">#2</span></span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'a'</span>&gt;<span class="string">'b'</span><span class="comment">#False  比较的是ASCII码值</span></span><br><span class="line">ord(<span class="string">'a'</span>)<span class="comment">#97</span></span><br><span class="line">ord(<span class="string">'b'</span>)<span class="comment">#98</span></span><br><span class="line"><span class="string">'abc'</span>&lt;<span class="string">'abd'</span><span class="comment">#True，从前往后依次比较元素直到能比较出大小为止</span></span><br><span class="line">ord(<span class="string">'abc'</span>)<span class="comment">#报错</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]&lt;[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]<span class="comment">#True</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)&lt;(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)<span class="comment">#True</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算符（优先级最低）"><a href="#逻辑运算符（优先级最低）" class="headerlink" title="逻辑运算符（优先级最低）"></a>逻辑运算符（优先级最低）</h3><p>操作类型和返回类型都是布尔bool类型</p><p>and:且（与）</p><p>or:或</p><p>not:非</p><h4 id="not运算符操作"><a href="#not运算符操作" class="headerlink" title="not运算符操作"></a>not运算符操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> <span class="comment">#1</span></span><br><span class="line"><span class="string">'a'</span> <span class="keyword">and</span> <span class="string">'b'</span> <span class="comment">#'b'</span></span><br><span class="line"><span class="string">'a'</span> o<span class="string">r'b'</span> <span class="comment">#'a'</span></span><br><span class="line"><span class="keyword">not</span> <span class="string">'a'</span><span class="comment">#False</span></span><br></pre></td></tr></table></figure><p>*<em>int float *</em> 0被认为False, 非0表示True</p><p><strong>str</strong>  ‘’空字符串被认为False,否则表示True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> <span class="string">'0'</span><span class="comment">#False</span></span><br></pre></td></tr></table></figure><p><strong>list</strong> []空列表被认为False,否则表示True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> []<span class="comment">#True</span></span><br></pre></td></tr></table></figure><p><strong>tuple set dict</strong>同上</p><h4 id="or运算符操作-短路计算"><a href="#or运算符操作-短路计算" class="headerlink" title="or运算符操作(短路计算)"></a>or运算符操作(短路计算)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>]<span class="keyword">or</span>[] <span class="comment">#[1]</span></span><br><span class="line">[]<span class="keyword">or</span>[<span class="number">1</span>] <span class="comment">#[1]</span></span><br><span class="line"><span class="comment">#不用关心返回第几个元素，知道返回True或False就可</span></span><br></pre></td></tr></table></figure><h4 id="and运算符操作（短路计算）"><a href="#and运算符操作（短路计算）" class="headerlink" title="and运算符操作（短路计算）"></a>and运算符操作（短路计算）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'a'</span> <span class="keyword">and</span> <span class="string">'b'</span><span class="comment">#'b'</span></span><br><span class="line"><span class="string">''</span><span class="keyword">and</span><span class="string">'b'</span><span class="comment">#''</span></span><br></pre></td></tr></table></figure><h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">a <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]<span class="comment">#True</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">b <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]<span class="comment">#False</span></span><br><span class="line">b <span class="keyword">not</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]<span class="comment">#True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="string">'h'</span></span><br><span class="line">b <span class="keyword">in</span> <span class="string">'hello'</span><span class="comment">#True</span></span><br><span class="line">b <span class="keyword">not</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)<span class="comment">#True</span></span><br><span class="line">b <span class="keyword">not</span> <span class="keyword">in</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;<span class="comment">#True</span></span><br></pre></td></tr></table></figure><h4 id="字典的成员运算符"><a href="#字典的成员运算符" class="headerlink" title="字典的成员运算符"></a>字典的成员运算符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="string">'a'</span></span><br><span class="line">b <span class="keyword">in</span> &#123;<span class="string">'c'</span>:<span class="number">1</span>&#125;<span class="comment">#False</span></span><br><span class="line">b=<span class="number">1</span></span><br><span class="line">b <span class="keyword">in</span> &#123;<span class="string">'c'</span>:<span class="number">1</span>&#125;<span class="comment">#False</span></span><br><span class="line">b=<span class="string">'c'</span></span><br><span class="line">b <span class="keyword">in</span>&#123;<span class="string">'c'</span>:<span class="number">1</span>&#125;<span class="comment">#True</span></span><br></pre></td></tr></table></figure><p><strong>key-value **根据</strong>key**来判断</p><h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">a <span class="keyword">is</span> b<span class="comment">#False</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">a <span class="keyword">is</span> b<span class="comment">#True</span></span><br><span class="line">a = <span class="string">'hello'</span></span><br><span class="line">b = <span class="string">'world'</span></span><br><span class="line">a <span class="keyword">is</span> b<span class="comment">#False</span></span><br><span class="line">c=<span class="string">'hello'</span></span><br><span class="line">a <span class="keyword">is</span> c <span class="comment">#True</span></span><br></pre></td></tr></table></figure><p><strong>如果两个变量取值相等，则is返回True</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1.0</span></span><br><span class="line">a == b<span class="comment">#True</span></span><br><span class="line">a <span class="keyword">is</span> b<span class="comment">#False</span></span><br></pre></td></tr></table></figure><p><strong><em>==比较的是取值是否相等，is比较的是两个变量的内存地址是否相等</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">b = &#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>&#125;</span><br><span class="line">a == b<span class="comment">#True 集合无序</span></span><br><span class="line">a <span class="keyword">is</span> b<span class="comment">#False  id(a)和id(b)不等</span></span><br><span class="line">c = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">d = (<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">c == d<span class="comment">#False 元组有序</span></span><br><span class="line">c <span class="keyword">is</span> d<span class="comment">#False</span></span><br></pre></td></tr></table></figure><h3 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'hello'</span></span><br><span class="line">type(a) == int<span class="comment">#False</span></span><br><span class="line">type(a) == str<span class="comment">#True</span></span><br><span class="line"><span class="comment">#以上判断类型的方法不推荐,原因是不能判断子类是否属于</span></span><br><span class="line">isinstance(a,str)<span class="comment">#True</span></span><br><span class="line">isinstance(a,int)<span class="comment">#False</span></span><br><span class="line"><span class="comment">#isinstance方法推荐使用，可以判断子类是否属于</span></span><br><span class="line">isinstance(a,(int,str,float))<span class="comment">#true判断a是否是后面三种类型中的其中一个</span></span><br><span class="line">isinstance(a,(int,float))<span class="comment">#False</span></span><br></pre></td></tr></table></figure><p><strong><em>对象的三个特征：id(is)、value(==)、type(isinstance)</em></strong></p><h3 id="位运算符（把数字当做二进制数进行运算）"><a href="#位运算符（把数字当做二进制数进行运算）" class="headerlink" title="位运算符（把数字当做二进制数进行运算）"></a>位运算符（把数字当做二进制数进行运算）</h3><p>&amp;按位与</p><p>|按位或</p><p>^按位异或</p><p>~按位取反</p><p>&lt;&lt;左移动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">2</span> <span class="comment">#10</span></span><br><span class="line">b = <span class="number">3</span> <span class="comment">#11</span></span><br><span class="line">a &amp; b <span class="comment">#2 每一位都作与运算</span></span><br><span class="line">a | b <span class="comment">#3 每一位都作或运算</span></span><br></pre></td></tr></table></figure><h1 id="第六章分支、循环、条件和枚举"><a href="#第六章分支、循环、条件和枚举" class="headerlink" title="第六章分支、循环、条件和枚举"></a>第六章分支、循环、条件和枚举</h1><p><strong>表达式(Expression)是运算符(operator)和操作数(operand)所构成的序列。</strong></p><p><strong>注意表达式优先级</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">a <span class="keyword">or</span> b <span class="keyword">and</span> c<span class="comment">#1 先做and运算再做or运算</span></span><br></pre></td></tr></table></figure><p>同级运算符从左向右计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> a <span class="keyword">or</span> b + <span class="number">2</span> == c//<span class="literal">False</span></span><br><span class="line">(<span class="keyword">not</span> a) <span class="keyword">or</span> ((b+<span class="number">2</span>) == c)<span class="comment">#上式等价于加上括号后的表达式</span></span><br><span class="line"><span class="comment"># 优先级：not&gt;and&gt;or</span></span><br></pre></td></tr></table></figure><h2 id="在文本文件中编写python代码"><a href="#在文本文件中编写python代码" class="headerlink" title="在文本文件中编写python代码"></a>在文本文件中编写python代码</h2><p>命令行可以写一些简单的代码，不推荐使用其来编写代码</p><p>step1 在IDLE中使用以下两种方式打开文件：</p><ol><li>点击Flie——new File</li><li>Ctrl+n</li></ol><p>代码书写完毕，按Ctrl+s保存</p><p>step2 按住win+R打开命令行工具cmd回车，按以下方式运行</p><p><strong></strong></p><p>注意也可以使用记事本编写代码，但要注意文件名后缀为.py</p><p>推荐开发工具:pycharm（复杂项目） vscode（小工具） sublime</p><p>IDE:集成开发环境</p><h2 id="熟悉VSCode开发环境与python插件安装"><a href="#熟悉VSCode开发环境与python插件安装" class="headerlink" title="熟悉VSCode开发环境与python插件安装"></a>熟悉VSCode开发环境与python插件安装</h2><p>python注释：</p><ul><li>单行注释：开头加#（快捷键Ctrl+/，该行任意位置均可使用）</li><li>多行注释：开头和结尾分别加’’’（快捷键Shift+Alt+A，需选中需要注释的部分）</li></ul><p><strong>在VSCode菜单栏-编辑-处，可看到相关快捷键。</strong></p><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mood = <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> mood :</span><br><span class="line">    print(<span class="string">'go to left'</span>)<span class="comment">#注意缩进，前有4个空格；若无则会报错</span></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    print(<span class="string">'go to right'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">d = []</span><br><span class="line"><span class="keyword">if</span> a&gt;b:<span class="comment">#if d :也可</span></span><br><span class="line">    print(<span class="string">'go to left'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'go to right'</span>)</span><br></pre></td></tr></table></figure><p><strong>命名规则：</strong></p><ul><li>变量名小写</li><li>主副单词用下划线，而不采用驼峰命名</li><li>常量命名所有单词大写(在函数和类之外的变量，编译器会将其作为常量检测)（不建议有过多的常量）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = input()<span class="comment">#键盘输入函数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">     一段小程序</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">ACCOUNT =<span class="string">'qiyue'</span></span><br><span class="line">PASSWORD=<span class="string">'123456'</span></span><br><span class="line">print(<span class="string">'please input ACCOUNT'</span>)</span><br><span class="line">USER_ACCOUNT=input()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'please input PASSWORD'</span>)</span><br><span class="line">USER_PASSWORD=input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ACCOUNT == USER_ACCOUNT <span class="keyword">and</span> PASSWORD == USER_PASSWORD:<span class="comment">#冒号前不建议有空格，比较运算符前后要有空格</span></span><br><span class="line">    print(<span class="string">'success'</span>)<span class="comment">#VSCode中一个Tab等于四个空格，故可以使用一个Tab键简化敲击过程</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'fail'</span>)</span><br></pre></td></tr></table></figure><p><strong>更改所有匹配项的快捷键：Ctrl+F2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># snippet 片段</span></span><br><span class="line"><span class="keyword">if</span> code: <span class="comment">#输入if选择需要的snippet</span></span><br><span class="line">    <span class="keyword">pass</span> <span class="comment">#空语句/占位语句，不知道写啥时可以先用其占位</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> a:   <span class="comment">#无需删除即可直接键入if后的条件</span></span><br><span class="line">    print()<span class="comment">#上一行输入完毕后点击Tab键可直接跳转该行，无需删除该行原有内容即可直接键入语句</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span><span class="comment">#从上一个print点击Tab键即可直接跳转该行，无需删除即可直接键入该行语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> target_list <span class="keyword">in</span> expression_list:<span class="comment">#for语句有snippet</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">classname</span><span class="params">(object)</span>:</span><span class="comment">#类class有</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcname</span><span class="params">(parameter_list)</span>:</span><span class="comment">#函数def有</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#if语句可以嵌套</span></span><br></pre></td></tr></table></figure><p><strong>python中没有switch语句可用elif或者字典代替</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a = input()<span class="comment">#输入1</span></span><br><span class="line">print(type(a))<span class="comment">#str</span></span><br><span class="line"><span class="comment">#a = int(a)</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">1</span>: </span><br><span class="line">    print(<span class="string">'apple'</span>)</span><br><span class="line"><span class="keyword">elif</span> a == <span class="number">2</span>: </span><br><span class="line">    print(<span class="string">'orange'</span>)</span><br><span class="line"><span class="keyword">elif</span> a == <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'banana'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'shopping'</span>)</span><br><span class="line"><span class="comment">#若无第3行，输出shopping；若有，输出apple</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">0</span></span><br><span class="line"><span class="comment"># a 和 b 不可能同时为False</span></span><br><span class="line">a <span class="keyword">or</span> b</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p><strong>按住Ctrl+C可以强制终止无限循环</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#循环</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#while for</span></span><br><span class="line"></span><br><span class="line">CONDITION = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> CONDITION:</span><br><span class="line">    print(<span class="string">'I am While'</span>)<span class="comment">#陷入死循环</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#递归情景下建议用while,其他情况建议用for</span></span><br><span class="line">counter = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> counter&lt;=<span class="number">10</span>:<span class="comment">#while后不能是常量，得是条件判断句</span></span><br><span class="line">    counter +=<span class="number">1</span></span><br><span class="line">    print(counter)</span><br><span class="line"><span class="keyword">else</span>:            <span class="comment">#即当不满足循环条件时执行的语句</span></span><br><span class="line">    print(<span class="string">'EOF'</span>)</span><br><span class="line"><span class="string">'''输出</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">4</span></span><br><span class="line"><span class="string">5</span></span><br><span class="line"><span class="string">6</span></span><br><span class="line"><span class="string">7</span></span><br><span class="line"><span class="string">8</span></span><br><span class="line"><span class="string">9</span></span><br><span class="line"><span class="string">10 </span></span><br><span class="line"><span class="string">11</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#for主要是用来遍历/循环 序列、集合、字典</span></span><br><span class="line">a = [[<span class="string">'apple'</span>,<span class="string">'orange'</span>,<span class="string">'banana'</span>,<span class="string">'grape'</span>],(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    print(x)</span><br><span class="line"><span class="string">'''输出</span></span><br><span class="line"><span class="string">['apple', 'orange', 'banana','grape']</span></span><br><span class="line"><span class="string">(1, 2, 3)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> x:</span><br><span class="line">        print(y)</span><br><span class="line"><span class="keyword">else</span>: <span class="comment">#for中元素遍历完成后执行else</span></span><br><span class="line">    print(<span class="string">'fruit is gone'</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">apple</span></span><br><span class="line"><span class="string">orange</span></span><br><span class="line"><span class="string">banana</span></span><br><span class="line"><span class="string">grape</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">fruit is gone</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> x:</span><br><span class="line">        print(y,end=<span class="string">''</span>)<span class="comment">#默认情况下end='\n'</span></span><br><span class="line"><span class="string">'''输出</span></span><br><span class="line"><span class="string">appleorangebananagrape123</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'EOF'</span>)<span class="comment">#有break打断不会输出EOF</span></span><br><span class="line"><span class="comment"># 1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'EOF'</span>)<span class="comment">#有continue会执行EOF</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="comment"># EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = [[<span class="string">'apple'</span>,<span class="string">'orange'</span>,<span class="string">'banana'</span><span class="string">'grape'</span>],(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> x:</span><br><span class="line">        <span class="keyword">if</span> y == <span class="string">'orange'</span>:</span><br><span class="line">            <span class="keyword">break</span>  <span class="comment">#跳出的是内层循环</span></span><br><span class="line">        print(y)</span><br><span class="line"><span class="keyword">else</span>:    <span class="comment">#else与外层循环for对应，break并没有跳出外层循环故else仍然会执行</span></span><br><span class="line">    print(<span class="string">'fruit is gone'</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">apple</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">fruit is gone</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for(i=0;i&lt;10;i++)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):<span class="comment">#从0开始总共有10个元素</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="comment">#打印出0-9（以列的方式打印）</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>):<span class="comment">#步长为2</span></span><br><span class="line">    print(x)</span><br><span class="line"><span class="comment">#打印出0-2-4-6-8（以列的方式打印）</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>):</span><br><span class="line">    print(x,end=<span class="string">'|'</span>)</span><br><span class="line"><span class="comment">#0|2|4|6|8（以行的方式打印）</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">0</span>,<span class="number">-2</span>):</span><br><span class="line">    print(x,end=<span class="string">'|'</span>)</span><br><span class="line"><span class="comment">#10|8|6|4|2（以行的方式打印）</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(a),<span class="number">2</span>):</span><br><span class="line">    print(a[i],end=<span class="string">"|"</span>)</span><br><span class="line"><span class="comment">#1|3|5|7</span></span><br><span class="line">b = a[<span class="number">0</span>:len(a):<span class="number">2</span>]</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment">#[1,3,5,7]</span></span><br></pre></td></tr></table></figure><h1 id="第七章python工程的组织结构：包、模块、类"><a href="#第七章python工程的组织结构：包、模块、类" class="headerlink" title="第七章python工程的组织结构：包、模块、类"></a>第七章python工程的组织结构：包、模块、类</h1><p><strong></strong></p><h2 id="包、模块名字"><a href="#包、模块名字" class="headerlink" title="包、模块名字"></a>包、模块名字</h2><p>从表面上来看包的名字就是文件夹的名字，而模块的名字就是文件的名字</p><p><strong></strong></p><p>为了区别不同包下相同的模块名，要在模块开头部分加上命名空间，格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bag_name.module_name</span><br></pre></td></tr></table></figure><ul><li><p>一个包下面可以有子包，可以有模块；包和模块可以平级</p></li><li><p>如果想用文件夹来表示一个包，而不是一个普通文件夹，该文件夹必须包含一个特殊的文件，如下图所示：</p><p><strong></strong></p><p>注意init前后各两个下划线，这个文件也是一个特殊的模块，可以什么都不写用来标注包，也可以像其他文件一样写代码</p><p>这个文件的命名空间比较特殊，就是包名，如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bag_name</span><br></pre></td></tr></table></figure></li></ul><h2 id="import导入模块"><a href="#import导入模块" class="headerlink" title="import导入模块"></a>import导入模块</h2><p><strong>同一个包中，一个模块导入另一个模块（同一级别）：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name</span><br><span class="line">print(module_name.variable_name)<span class="comment">#顺序不能颠倒，先导入再使用</span></span><br></pre></td></tr></table></figure><p><strong>同一个包中，一个模块导入另一个包中的模块（不同级别）：</strong></p><p><strong><em>导入方法一</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bag_name.module_name</span><br><span class="line">print(bag_name.module_name.variable_name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bag_name.module_name <span class="keyword">as</span> m <span class="comment">#简化路径的方法</span></span><br><span class="line">print(m.variable_name)</span><br></pre></td></tr></table></figure><p>上述两种方法均可以，当嵌套的包较多时选用第二种方法</p><p><strong>import不能导入模块下的变量，只能导入模块</strong></p><p><strong>.pyc文件是自动生成的</strong></p><p><strong><em>导入方法二</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bag_name.module_name <span class="keyword">import</span> variable_name <span class="comment">#导入某个变量</span></span><br><span class="line">print(a)</span><br><span class="line"><span class="keyword">from</span> bag_name.module_name <span class="keyword">import</span> * <span class="comment">#导入全部变量,不推荐过多使用*</span></span><br><span class="line">print(a,b,c,d)</span><br><span class="line"><span class="keyword">from</span> bag_name.module_name <span class="keyword">import</span> variable1_name,variable2_name,variable3_name..... <span class="comment">#导入特定变量</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bag_name <span class="keyword">import</span> module_name <span class="comment">#导入模块</span></span><br><span class="line">print(module_name.variable_name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#bag.module所要导入的模块中（来源）</span></span><br><span class="line">__all__=[<span class="string">'variable1_name'</span>,<span class="string">'variable2_name'</span>,...]</span><br><span class="line"><span class="comment">#导入某模块中特定的几个变量，就在该模块首部加上述表达式，列表中的变量即为所要导入的特定变量;与导入方法中第一块中第3行、第4行搭配使用。</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入变量过多时换行方法</span></span><br><span class="line"><span class="comment">#method_one 不推荐</span></span><br><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> variable1_name,variable2_name,\</span><br><span class="line">variable3_name....<span class="comment">#若需换行，在行末加反斜杠</span></span><br><span class="line"><span class="comment">#method_two 推荐</span></span><br><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> (variable1_name,variable2_name,</span><br><span class="line">variable3_name....)<span class="comment">#加括号</span></span><br></pre></td></tr></table></figure><p><strong>(两个下划线)init(两个下划线)</strong>作用：</p><ol><li>当一个包被导入（或者该包下面的某一个变量被导入）时，该包中的init文件首先被执行，而且被python自动执行</li></ol><p>该包中init文件中可以确定导入的（该包中的）模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__all__[<span class="string">'module1_name'</span>,<span class="string">'module2_name'</span>,.....]</span><br></pre></td></tr></table></figure><p>同时导入模块的目的地模块中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bag_name <span class="keyword">import</span>*</span><br><span class="line">print(module_name.variable_name)</span><br></pre></td></tr></table></figure><ol start="2"><li><p>有大量包需要批量导入很多模块时，可以将大量包导入init文件中，再在模块目的地中导入init文件所在的包，即可实现批量导入，因为导入包时会先执行init文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#__init__.py 假设在包t中</span></span><br><span class="line"><span class="keyword">import</span> bag1_name</span><br><span class="line"><span class="keyword">import</span> bag2_name</span><br><span class="line"><span class="keyword">import</span> bag3_name</span><br><span class="line"><span class="comment">#目的模块</span></span><br><span class="line"><span class="keyword">import</span> t</span><br><span class="line">print(t.bag1_name.operation)</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li>提示：VSCode清空指令是 <strong>cls</strong></li></ol><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ol><li>包和模块是不会被重复的导入</li><li>避免循环导入 如：在p1模块中导入p2，注意不需要在p2中导入p1，在p1中可以正常运行；在p1中引入p2，在p2中引入p3，在p3中引入p4，在p1中即可正常运行，不需要在p4中导入p1</li><li>python导入一个模块时，就会执行该模块所有内容</li></ol><h1 id="第八章python函数"><a href="#第八章python函数" class="headerlink" title="第八章python函数"></a>第八章python函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1.12386</span></span><br><span class="line">result = round(a,<span class="number">2</span>)<span class="comment">#round函数根据四舍五入保留位数</span></span><br><span class="line">print(result)<span class="comment">#1.12</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#想要查询python内置函数的方法</span></span><br><span class="line"><span class="comment">#在VSCode命令行中输入以下命令：</span></span><br><span class="line">python<span class="comment">#而后回车</span></span><br><span class="line">help(def_name)<span class="comment">#而后回车</span></span><br></pre></td></tr></table></figure><h2 id="函数的特点"><a href="#函数的特点" class="headerlink" title="函数的特点"></a>函数的特点</h2><ol><li>功能性</li><li>隐藏细节</li><li>避免编写重复的代码</li></ol><h2 id="函数的定义及运行特点"><a href="#函数的定义及运行特点" class="headerlink" title="函数的定义及运行特点"></a>函数的定义及运行特点</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#def funcname(parameter_list):</span></span><br><span class="line"><span class="comment">#   pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.return value</span></span><br><span class="line"><span class="comment">#2.参数列表可以没有，如果没有返回值为None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">100</span>)<span class="comment">#设置最大递归深度</span></span><br></pre></td></tr></table></figure><p>不要设置与python内置函数同名的自定义函数</p><h2 id="如何让函数返回多个结果"><a href="#如何让函数返回多个结果" class="headerlink" title="如何让函数返回多个结果"></a>如何让函数返回多个结果</h2><p>没有return语句，默认返回空值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myprint</span><span class="params">(code)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(code)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">None</span>#默认这样，可不加这句</span></span><br><span class="line"><span class="function"><span class="title">def</span> <span class="title">myprint</span><span class="params">(code)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(code)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> #如果加<span class="title">return</span>语句，<span class="title">return</span>后面的语句将不再执行</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">damage</span><span class="params">(skil1,skil2)</span>:</span></span><br><span class="line">    damage1 = skil1*<span class="number">2</span></span><br><span class="line">    damage2 = skil2*<span class="number">3</span></span><br><span class="line">    <span class="keyword">return</span> damage1,damage2<span class="comment">#函数返回多个结果</span></span><br><span class="line"><span class="comment">#以下不推荐，可读性差</span></span><br><span class="line">damages = damage(<span class="number">3</span>,<span class="number">6</span>)</span><br><span class="line">print(type(damages)) <span class="comment">#tuple(即元组类型)</span></span><br><span class="line">print(damages[<span class="number">0</span>],damages[<span class="number">1</span>])<span class="comment"># 6 18</span></span><br><span class="line"><span class="comment">#以下推荐，可读性好</span></span><br><span class="line">skil1_damage,skil2_damage = damage(<span class="number">3</span>,<span class="number">6</span>)<span class="comment">#序列解包，用有意义的变量名称来接收这样的函数返回结果，而不是元组的索引方式来进行元组的解包操作</span></span><br><span class="line">print(skil1_damage,skil2_damage)<span class="comment">#6 18</span></span><br></pre></td></tr></table></figure><h2 id="序列解包和链式赋值"><a href="#序列解包和链式赋值" class="headerlink" title="序列解包和链式赋值"></a>序列解包和链式赋值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#序列解包</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">a,b,c = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="comment">#三个变量接收三个数值 #等价于上述三个语句</span></span><br><span class="line"></span><br><span class="line">d =  <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">print(type(d)) <span class="comment">#tuple</span></span><br><span class="line"><span class="comment">#a,b = [1,2,3]报错</span></span><br><span class="line"><span class="comment">#链式赋值</span></span><br><span class="line">a=b=c</span><br><span class="line">print(a,b,c)<span class="comment">#1 1 1</span></span><br></pre></td></tr></table></figure><h2 id="必须参数与关键字参数"><a href="#必须参数与关键字参数" class="headerlink" title="必须参数与关键字参数"></a>必须参数与关键字参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.必须参数,x、y有顺序：实参第一个对应x,第二个对应y</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span><span class="comment">#形参</span></span><br><span class="line">    result = x+y</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">a = add(<span class="number">2</span>,<span class="number">3</span>)<span class="comment">#实参</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.关键字参数，任意指定参数的顺序，从而实现函数的调用</span></span><br><span class="line">c = add(y=<span class="number">3</span>,x=<span class="number">2</span>)<span class="comment">#明确指定形参对应的值，增强可读性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#两种参数的区别在于函数的调用上，而不是函数的定义上</span></span><br></pre></td></tr></table></figure><h2 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数的参数列表很长，不推荐，最好封装</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_student_files</span><span class="params">(name,gender=<span class="string">'男'</span>,age=<span class="string">'18'</span>,college=<span class="string">'xx小学'</span>)</span>:</span></span><br><span class="line">    print(name,age,gender,college)</span><br><span class="line">print_student_files(<span class="string">'鸡小萌'</span>,<span class="string">'男'</span>,<span class="number">18</span>,<span class="string">'人民路小学'</span>)</span><br><span class="line">print_student_files(<span class="string">'鸡小萌'</span>)<span class="comment">#与上一行打印出的结果相同</span></span><br><span class="line">print_student_files(<span class="string">'喜小乐'</span>,<span class="string">'女'</span>,<span class="number">16</span>)<span class="comment">#没有的参数等于默认值</span></span><br><span class="line">print_student_files()<span class="comment">#报错，如果没有默认值必须传递实参</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常见错误</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_student_files</span><span class="params">(name,gender=<span class="string">'男'</span>,age=<span class="string">'18'</span>,college=<span class="string">'xx小学'</span>)</span>:</span></span><br><span class="line">    print(name,age,gender,college)</span><br><span class="line"><span class="comment">#默认参数都放在非默认参数之前，应该将非默认放在默认之前</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_student_files</span><span class="params">(name,gender=<span class="string">'男'</span>,age=<span class="string">'18'</span>,college=<span class="string">'xx小学'</span>,teacher)</span>:</span><span class="comment">#报错，teacher应放在name之后</span></span><br><span class="line">    print(name,age,gender,college)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#参数对应错误</span></span><br><span class="line">print_student_files(<span class="string">'果果'</span>,<span class="number">17</span>)<span class="comment">#报错，python会将17对应到形参gender</span></span><br><span class="line">print_student_files(<span class="string">'果果'</span>,age = <span class="number">17</span>)<span class="comment">#正确，关键字赋值可以不遵守顺序</span></span><br><span class="line">print_student_files(<span class="string">'果果'</span>,gender=<span class="string">'女'</span>,<span class="number">17</span>,college=<span class="string">'光明小学'</span>)<span class="comment">#报错，必须将默认参数放在非默认参数之前</span></span><br></pre></td></tr></table></figure><h1 id="第九章-高级部分面型对象"><a href="#第九章-高级部分面型对象" class="headerlink" title="第九章 高级部分面型对象"></a>第九章 高级部分面型对象</h1><h2 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentHomeWork</span>#类名第一个字母要大写，不建议使用下划线分隔两个单词</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_file</span><span class="params">(self)</span>:</span><span class="comment">#self是固定的</span></span><br><span class="line">        print(<span class="string">"name:"</span>+self.name)</span><br><span class="line">        print(<span class="string">"age:"</span>+str(self.age))</span><br><span class="line">    </span><br><span class="line">student = Student()<span class="comment">#实例化一个类：类名()</span></span><br><span class="line">student.print_file()<span class="comment">#调用类下面的方法</span></span><br></pre></td></tr></table></figure><h2 id="浅谈函数与方法的区别"><a href="#浅谈函数与方法的区别" class="headerlink" title="浅谈函数与方法的区别"></a>浅谈函数与方法的区别</h2><p>注意：最好一个模块里全写类的定义，另一个模块全是类的调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类的调用</span></span><br><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> class_name</span><br><span class="line">object_name = class_name()</span><br><span class="line">object_name.def_name()</span><br></pre></td></tr></table></figure><p><strong>方法与函数的区别：</strong></p><ol><li>方法：设计层面</li><li>函数：程序运行、过程式的一种称谓</li></ol><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类像模板可以生成不同的对象</span></span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">''</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span> <span class="comment">#构造函数~注意self</span></span><br><span class="line">        print(<span class="string">'student'</span>)</span><br><span class="line">        <span class="comment">#return None默认是这样，返回值也只能是None</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span><span class="comment">#注意括号里面·self</span></span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line">        </span><br><span class="line">student1 = Student()<span class="comment">#自动调用构造函数,必须与构造函数参数匹配</span></span><br><span class="line">student1.__init__() <span class="comment">#也可以显式调用构造函数，这种方式很少</span></span><br><span class="line"><span class="comment">##输出</span></span><br><span class="line"><span class="comment">##student</span></span><br><span class="line"><span class="comment">##student</span></span><br><span class="line">a = student1.__init__()</span><br><span class="line">print(a) <span class="comment">#None</span></span><br><span class="line">print(type(a)) <span class="comment">#&lt;class'NoneType'&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">''</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">        name = name</span><br><span class="line">        age = age</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line">        </span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)<span class="comment">#自动调用构造函数,必须与构造函数参数匹配</span></span><br><span class="line">print(student1.name)<span class="comment">#''实际并没有更改属性</span></span><br><span class="line">print(student1.age)<span class="comment">#0</span></span><br></pre></td></tr></table></figure><h2 id="区别模块变量和类中的变量"><a href="#区别模块变量和类中的变量" class="headerlink" title="区别模块变量和类中的变量"></a>区别模块变量和类中的变量</h2><p>局部变量不会覆盖全局变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="number">50</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    c= x+y</span><br><span class="line">    print(c)<span class="comment">#3</span></span><br><span class="line">add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">print(c)<span class="comment">#50</span></span><br></pre></td></tr></table></figure><h2 id="类变量与实例变量"><a href="#类变量与实例变量" class="headerlink" title="类变量与实例变量"></a>类变量与实例变量</h2><p>实例变量：self.name</p><p>类变量：在类中，定义在方法之外的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">'qiyue'</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line">         print(self.name)</span><br><span class="line">         print(name)</span><br><span class="line">        </span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">student2 = Student(<span class="string">'喜小乐'</span>,<span class="number">19</span>)</span><br><span class="line">print(student1.name)</span><br><span class="line">print(student2.name)</span><br><span class="line">print(student.name)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="comment">#石敢当</span></span><br><span class="line"><span class="comment">#喜小乐</span></span><br><span class="line"><span class="comment">#qiyue</span></span><br><span class="line">print(student1.__dict__)</span><br><span class="line"><span class="comment">#&#123;'name':'石敢当','age':18&#125;</span></span><br><span class="line">print(Student.__dict__)</span><br><span class="line"><span class="comment">#具体自己运行，结果比较长</span></span><br></pre></td></tr></table></figure><h2 id="类与对象的变量查找顺序"><a href="#类与对象的变量查找顺序" class="headerlink" title="类与对象的变量查找顺序"></a>类与对象的变量查找顺序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">''</span><span class="comment">#类变量</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">        name = name</span><br><span class="line">        age = age</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span><span class="comment">#self代指对象本身</span></span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line">        </span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)<span class="comment">#自动调用构造函数,必须与构造函数参数匹配</span></span><br><span class="line">print(student1.name<span class="comment">#实例变量)#''实际并没有更改属性</span></span><br></pre></td></tr></table></figure><p>为什么实例变量打印出来是类变量：先找实例变量，找不到就类变量，类找不到就去父类中找</p><p>如果需要打印实例变量需：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age<span class="comment">#注意加self</span></span><br></pre></td></tr></table></figure><h2 id="self与实例方法"><a href="#self与实例方法" class="headerlink" title="self与实例方法"></a>self与实例方法</h2><p>实例方法参数第一个放self，self代表的是实例不是类</p><p>self必须显示声明</p><h2 id="在实例方法中访问实例变量与类变量"><a href="#在实例方法中访问实例变量与类变量" class="headerlink" title="在实例方法中访问实例变量与类变量"></a>在实例方法中访问实例变量与类变量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">'qiyue'</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line">         print(self.name)</span><br><span class="line">         print(Student.name)<span class="comment">#访问类变量的方式1</span></span><br><span class="line">         print(self.__class__.name)<span class="comment">#访问类变量的方式2</span></span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line"><span class="comment">#石敢当</span></span><br><span class="line"><span class="comment">#qiyue</span></span><br><span class="line"><span class="comment">#qiyue</span></span><br><span class="line">print(Student.name)<span class="comment">#访问类变量的方式1</span></span><br><span class="line"><span class="comment">#qiyue</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">name = <span class="string">'qiyue'</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line">         self.__class__.sum += <span class="number">1</span></span><br><span class="line">         print(<span class="string">'当前班级学生总数为：'</span>+str(self.__class__.sum))</span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">student2 = Student(<span class="string">'喜小乐'</span>,<span class="number">18</span>)</span><br><span class="line">student3 = Student(<span class="string">'小赵'</span>,<span class="number">18</span>)</span><br><span class="line"><span class="comment">#当前班级学生总数为：1</span></span><br><span class="line"><span class="comment">#当前班级学生总数为：2</span></span><br><span class="line"><span class="comment">#当前班级学生总数为：3</span></span><br></pre></td></tr></table></figure><h2 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@classmethod#类方法前加@classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus_sum</span><span class="params">(cls)</span>:</span><span class="comment">#约定参数为cls，也可以将其变为self；cls代指类本身</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#具体用法见下文：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus_sum</span><span class="params">(cls)</span>:</span></span><br><span class="line">        cls.sum += <span class="number">1</span></span><br><span class="line">        print(<span class="string">'当前班级学生总数为：'</span>+str(cls.sum))</span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">Student.plus_sum()</span><br><span class="line"><span class="comment">#student1.plus_sum()也是一样的，但是不建议使用</span></span><br><span class="line">student2 = Student(<span class="string">'喜小乐'</span>,<span class="number">18</span>)</span><br><span class="line">Student.plus_sum()</span><br><span class="line">student3 = Student(<span class="string">'小赵'</span>,<span class="number">18</span>)</span><br><span class="line">Student.plus_sum()</span><br><span class="line"><span class="comment">#当前班级学生总数为：1</span></span><br><span class="line"><span class="comment">#当前班级学生总数为：2</span></span><br><span class="line"><span class="comment">#当前班级学生总数为：3</span></span><br></pre></td></tr></table></figure><h2 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line"><span class="meta">    @classmethod#类方法前加@classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus_sum</span><span class="params">(cls)</span>:</span><span class="comment">#约定参数为cls</span></span><br><span class="line">        cls.sum += <span class="number">1</span></span><br><span class="line">        print(self.name)<span class="comment">#报错，类变量不能访问实例变量</span></span><br><span class="line"><span class="meta">    @staticmethod#静态方法，最好不要经常使用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">        print(self.name)<span class="comment">#报错，类变量不能访问实例变量</span></span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">student1.add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">Student.add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">student1.plus_sum()</span><br><span class="line">Student.plus_sum()</span><br></pre></td></tr></table></figure><h2 id="成员可见性：公开和私有"><a href="#成员可见性：公开和私有" class="headerlink" title="成员可见性：公开和私有"></a>成员可见性：公开和私有</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类下面变量的更改要通过方法来完成，不能直接外部访问修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">()</span>:</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span> </span><br><span class="line">        <span class="comment">#初始化对象的属性</span></span><br><span class="line">         self.name= name</span><br><span class="line">         self.age = age</span><br><span class="line">         self.score=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">marking</span><span class="params">(self,score)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> score &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'不能给别人打负分'</span></span><br><span class="line">        self.score=score</span><br><span class="line">        print(self.name+<span class="string">'同学本次考试分数为：'</span>+str(self.score))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.do_enhomework()</span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_enhomework</span><span class="params">(self)</span>:</span></span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod#类方法前加@classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus_sum</span><span class="params">(cls)</span>:</span><span class="comment">#约定参数为cls</span></span><br><span class="line">        cls.sum += <span class="number">1</span></span><br><span class="line">        print(cls.sum)</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">        print(<span class="string">'add'</span>)</span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">result = student1.marking(<span class="number">-1</span>)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment">#不能给别人打负分</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#变量或方法前加双下划线__即为私有；若前后都有双下划线，可外部访问</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需注意以下形式：</span></span><br><span class="line">student1.__score = <span class="number">-1</span></span><br><span class="line">print(student1.__score)<span class="comment">#不报错。原因：这种形式相当于给student对象新添了一个__score；不建议这种形式</span></span><br></pre></td></tr></table></figure><h2 id="继承（子类允许继承多个父类）"><a href="#继承（子类允许继承多个父类）" class="headerlink" title="继承（子类允许继承多个父类）"></a>继承（子类允许继承多个父类）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#c6</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span><span class="params">()</span>:</span><span class="comment">#父类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        sum=<span class="number">0</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#c3</span></span><br><span class="line"><span class="keyword">from</span> c6 <span class="keyword">import</span> People</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(People)</span>:</span><span class="comment">#子类，括号内填父类</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line"></span><br><span class="line">student1 = Student(<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">print(Student.sum)</span><br><span class="line">print(student1.name)</span><br><span class="line">student1.get_name()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> c6 <span class="keyword">import</span> People</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(People)</span>:</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,school,name,age)</span>:</span> <span class="comment">#注意子类构造函数写法</span></span><br><span class="line">        self.school = school</span><br><span class="line">        <span class="comment">#People.__init__(self,name,age)#必须加self，调用父类构造</span></span><br><span class="line">        super(Student,self).__init__(name,age)<span class="comment">#调用父类构造</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'homework'</span>)</span><br><span class="line"></span><br><span class="line">student1 = Student(<span class="string">'太理'</span>,<span class="string">'石敢当'</span>,<span class="number">18</span>)</span><br><span class="line">print(student1.name)</span><br><span class="line"><span class="comment">#石敢当</span></span><br></pre></td></tr></table></figure><h2 id="子类方法调用父类方法：super关键字"><a href="#子类方法调用父类方法：super关键字" class="headerlink" title="子类方法调用父类方法：super关键字"></a>子类方法调用父类方法：super关键字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">super(Student,self).__init__(name,age)</span><br></pre></td></tr></table></figure><p>如果子类方法和父类方法同名，python不会报错，会优先调用子类方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#子类方法调用父类同名方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_homework</span><span class="params">(self)</span>:</span></span><br><span class="line">    super(Student,self).do_homework()</span><br></pre></td></tr></table></figure><h1 id="第十章正则表达式与JSON"><a href="#第十章正则表达式与JSON" class="headerlink" title="第十章正则表达式与JSON"></a>第十章正则表达式与JSON</h1><p>正则表达式是一个特殊的字符序列，一个字符串是否与我们所设定的这样的字符序列，相匹配</p><p>快速检索文本、实现一些替换文本的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'C|C++|Java|C#|Python|Javascript'</span></span><br><span class="line">print(a.index(<span class="string">'Python'</span>)&gt;<span class="number">-1</span>)<span class="comment">#判断是否含有Python</span></span><br><span class="line">print(<span class="string">'Python'</span><span class="keyword">in</span> a)<span class="comment">#判断是否含有Python</span></span><br></pre></td></tr></table></figure><p>正则表达式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a = <span class="string">'C|C++|Java|C#|Python|Javascript'</span></span><br><span class="line">r = re.findall(<span class="string">'Php'</span>,a)</span><br><span class="line"><span class="keyword">if</span> len(r) != <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'字符串中包含Php'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No'</span>)</span><br></pre></td></tr></table></figure><h2 id="元字符与普通字符"><a href="#元字符与普通字符" class="headerlink" title="元字符与普通字符"></a>元字符与普通字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a = <span class="string">'C0C++7Java8C#9Python6Javascript'</span></span><br><span class="line">r1 = re.findall(<span class="string">'\d'</span>,a)<span class="comment">#保留所有的数字'\d'是元字符</span></span><br><span class="line">print(r1)</span><br><span class="line"><span class="comment">#['0', '7', '8', '9', '6']</span></span><br><span class="line"></span><br><span class="line">r2 = re.findall(<span class="string">'\D'</span>,a)<span class="comment">#保留所有的数字</span></span><br><span class="line">print(r2)</span><br><span class="line"><span class="comment">#['C', 'C', '+', '+', 'J', 'a', 'v', 'a', 'C', '#', 'P', 'y', 't', 'h', 'o', 'n', 'J', 'a', 'v', 'a', 's', 'c', 'r', 'i', 'p', 't']</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      python暑期学习
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown学习笔记</title>
    <link href="http://yoursite.com/2020/05/04/article/"/>
    <id>http://yoursite.com/2020/05/04/article/</id>
    <published>2020-05-04T14:44:58.000Z</published>
    <updated>2020-07-03T04:43:49.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题(### )"></a>三级标题(### )</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题(####)"></a>四级标题(####)</h4><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p><strong>HelloWorld</strong>    (两边各加2个*)</p><p><em>HelloWorld</em> （两边各加1个*）</p><p><strong><em>HelloWorld</em></strong>（两边各加3个*）</p><p><del>HelloWorld</del>  （两边各加2个~）</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p>好好学习，天天向上（左边加1个&gt;)</p></blockquote><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><hr><p>（3个 - 号）</p><hr><p>（3个 * 号）</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p><strong><img src="/2020/05/04/article/test.jpg" class title="This is an test image"></strong></p><h3 id="图片名称-图片地址"><a href="#图片名称-图片地址" class="headerlink" title="! +[图片名称]+(图片地址)"></a>! +[图片名称]+(图片地址)</h3><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p><a href="http://bilibili.com" target="_blank" rel="noopener">点击跳转到B站</a> (按ctrl鼠标点击即可在Typora跳转)</p><h3 id="网站名称-网址链接"><a href="#网站名称-网址链接" class="headerlink" title="[网站名称]+(网址链接)"></a>[网站名称]+(网址链接)</h3><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><ol><li>A</li><li>B</li></ol><p>1.+空格+回车   自动跳转2</p><ul><li>A</li><li>B</li></ul><p>-号+空格 +回车</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>199.7.1</td></tr></tbody></table><p>名字|性别|生日</p><p>–|–|–|</p><p>张三|男|1997.7.1<br>注意要删除所建表格中间的空格</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span><br></pre></td></tr></table></figure><p>Tab键上3个```+回车</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol><li>除了字体特殊符号后不加空格，其余符号后有文本的，在符号后面需加上空格。</li></ol>]]></content>
    
    <summary type="html">
    
      markdown一些常用语法
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
</feed>
